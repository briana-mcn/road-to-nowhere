service: road-to-nowhere
variablesResolutionMode: 20210326

provider:
  name: aws
  region: us-east-2

custom:
    ImageVersion: 1.0.0
    ImageName: road-to-nowhere


resources:
  Resources:
    EcsExecutionRole:
      Type: AWS::IAM::Role
      Properties:
        ManagedPolicyArns:
          - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy
        RoleName: ecsExecutionRole
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - ecs-tasks.amazonaws.com
              Action:
                - sts:AssumeRole
    EcsTaskRole:
      Type: AWS::IAM::Role
      Properties:
        RoleName: ecsTaskRole
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - ecs-tasks.amazonaws.com
              Action:
                - sts:AssumeRole
        Policies:
          - PolicyName: AmazonECSTaskRdsAuroraPolicy
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
                - Effect: Allow
                  Action:
                    - 'rds:ModifyDBCluster'
                    - 'rds:ListTagsForResource'
                    - 'rds:DownloadDBLogFilePortion'
                    - 'rds:DownloadCompleteDBLogFile'
                  Resource:
                    Fn::Join:
                      - ''
                      - - 'arn:aws:rds:::cluster/'
                        - Ref: AuroraRDSCluster
    AuroraRDSCluster:
      Type: AWS::RDS::DBCluster
      Properties:
        DatabaseName: RoadtoNowhereDatabase
        DBClusterIdentifier: road-to-nowhere-db
        Engine: aurora
        EngineMode: serverless
        EngineVersion: 5.6.10a
        MasterUsername: ${ssm:road-to-nowhere-username}
        MasterUserPassword: ${ssm:road-to-nowhere-password}
        DBSubnetGroupName:
          Ref: RoadtoNowhereSubnetGroup
        ScalingConfiguration:
          AutoPause: true
          MinCapacity: 1
          MaxCapacity: 64
          SecondsUntilAutoPause: 300
        BackupRetentionPeriod: 3
        EnableHttpEndpoint: false
        StorageEncrypted: true
        VpcSecurityGroupIds:
        - Ref: RoadtoNowhereSecurityGroup
        DeletionProtection: true
    RoadtoNowhereVPC:
      Type: AWS::EC2::VPC
      Properties:
        CidrBlock: 10.0.0.0/16
        EnableDnsSupport: true
        EnableDnsHostnames: false
        InstanceTenancy: default
        Tags:
          - Key: 'Name'
            Value: 'road-to-nowhere-vpc'
    RoadtoNowhereSecurityGroup:
      DependsOn: RoadtoNowhereVPC
      Type: AWS::EC2::SecurityGroup
      Properties:
        GroupName: RoadtoNowhereSecurityGroup
        GroupDescription: SQL Traffic
        VpcId:
          Ref: RoadtoNowhereVPC
        SecurityGroupIngress:
          - IpProtocol: tcp
            FromPort: '0'
            ToPort: '3306'
            CidrIp: '0.0.0.0/24'
    RoadtoNowhereSubnetA:
      DependsOn: RoadtoNowhereVPC
      Type: AWS::EC2::Subnet
      Properties:
        VpcId:
          Ref: RoadtoNowhereVPC
        AvailabilityZone: us-east-2a
        CidrBlock: 10.0.1.0/24
        Tags:
          -
            Key: 'Name'
            Value: 'RoadtoNowhereSubnetA'
    RoadtoNowhereSubnetB:
      DependsOn: RoadtoNowhereVPC
      Type: AWS::EC2::Subnet
      Properties:
        VpcId:
          Ref: RoadtoNowhereVPC
        AvailabilityZone: us-east-2b
        CidrBlock: 10.0.0.0/24
        Tags:
          - Key: 'Name'
            Value: 'RoadtoNowhereSubnetB'
    RoadtoNowhereSubnetC:
      DependsOn: RoadtoNowhereVPC
      Type: AWS::EC2::Subnet
      Properties:
        VpcId:
          Ref: RoadtoNowhereVPC
        AvailabilityZone: us-east-2c
        CidrBlock: 10.0.2.0/24
        Tags:
          - Key: 'Name'
            Value: 'RoadtoNowhereSubnetC'
    RoadtoNowhereSubnetGroup:
      Type: AWS::RDS::DBSubnetGroup
      Properties:
        DBSubnetGroupDescription: 'Subnet group for road to nowhere db'
        SubnetIds:
          - Ref: RoadtoNowhereSubnetA
          - Ref: RoadtoNowhereSubnetB
          - Ref: RoadtoNowhereSubnetC
        Tags:
          - Key: 'Name'
            Value: 'RoadtoNowhereSubnetGroup'
    RoadtoNowhereSubnetNLBA:
      DependsOn: RoadtoNowhereVPC
      Type: AWS::EC2::Subnet
      Properties:
        VpcId:
          Ref: RoadtoNowhereVPC
        AvailabilityZone: us-east-2a
        CidrBlock: 10.0.4.0/24
        Tags:
          - Key: 'Name'
            Value: 'RoadtoNowhereSubnetLB-A'
    RoadtoNowhereSubnetNLBB:
      DependsOn: RoadtoNowhereVPC
      Type: AWS::EC2::Subnet
      Properties:
        VpcId:
          Ref: RoadtoNowhereVPC
        AvailabilityZone: us-east-2b
        CidrBlock: 10.0.5.0/24
        Tags:
          - Key: 'Name'
            Value: 'RoadtoNowhereSubnetLB-B'
    RoadtoNowhereEcrRepository:
      Type: AWS::ECR::Repository
      Properties:
        RepositoryName: road-to-nowhere/service
    RoadtoNowhereEcsCluster:
      Type: AWS::ECS::Cluster
      Properties:
        CapacityProviders:
          - FARGATE
        ClusterName: road-to-nowhere-fargate-cluster
    RoadtoNowhereLogGroup:
      Type: AWS::Logs::LogGroup
      Properties:
        LogGroupName: road-to-nowhere-logs
        RetentionInDays: 60
    RoadtoNowhereEcsTaskDefinition:
      Type: AWS::ECS::TaskDefinition
      Properties:
        ContainerDefinitions:
            - Name: RoadToNowhere-Service
              Image:
                Fn::Sub: '${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${self:custom.ImageName}/service:${self:custom.ImageVersion}'
              PortMappings:
                - ContainerPort: 8080
                  Protocol: http
              LogConfiguration:
                LogDriver: awslogs
                Options:
                  awslogs-group:
                    Ref: RoadtoNowhereLogGroup
                  awslogs-stream-prefix: awslogs-roadtonowhere-service
                  awslogs-region:
                    Fn::Sub: ${AWS::Region}
              Essential: ${strToBool(true)}
        Cpu: 256
        Memory: 512
        NetworkMode: awsvpc
        RequiresCompatibilities:
          - FARGATE
        Family: roadtonowhere
        ExecutionRoleArn:
          Ref: EcsExecutionRole
        TaskRoleArn:
          Ref: EcsTaskRole
    RoadToNowhereNetworkLoadBalancer:
      Type: AWS::ElasticLoadBalancingV2::LoadBalancer
      Properties:
        Name: roadtonowhere-nlb
        Type: network
        IpAddressType: ipv4
        Scheme: internet-facing
        Subnets:
          - Ref: RoadtoNowhereSubnetNLBA
          - Ref: RoadtoNowhereSubnetNLBB
